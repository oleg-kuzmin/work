//# Подробности getStaticProps
// Вот некоторая важная информация, о которой вам следует знать о getStaticProps.

//# Получить внешний API или базу данных запросов
// В lib/posts.js мы реализовали getSortedPostsData возможность извлечения данных из файловой системы. Но вы можете получить данные из других источников, например из конечной точки внешнего API, и все будет работать нормально:

export async function getSortedPostsData() {
  // Instead of the file system,
  // fetch post data from an external API endpoint
  const res = await fetch('..');
  return res.json();
}

// Примечание. Полифилы Next.js используются fetch() как на клиенте, так и на сервере. Вам не нужно его импортировать.

// Вы также можете напрямую запросить базу данных:

import someDatabaseSDK from 'someDatabaseSDK';

const databaseClient = someDatabaseSDK.createClient();

export async function getSortedPostsData() {
  // Instead of the file system,
  // fetch post data from a database
  return databaseClient.query('SELECT posts...');
}

// Это возможно, поскольку выполняется getStaticProps только на стороне сервера. Он никогда не будет работать на стороне клиента. Он даже не будет включен в пакет JS для браузера. Это означает, что вы можете писать код, например прямые запросы к базе данных, без их отправки в браузеры.

//# Разработка против производства
// В разработке ( npm run dev или yarn dev) getStaticProps запускается при каждом запросе.

// В производстве запускается getStaticProps во время сборки. Однако это поведение можно улучшить, используя fallback ключ, возвращаемый getStaticPaths.

// Поскольку он предназначен для запуска во время сборки, вы не сможете использовать данные, доступные только во время запроса, такие как параметры запроса или заголовки HTTP.

//# Разрешено только на странице
// getStaticProps можно экспортировать только с page. Вы не можете экспортировать его из нестраничных файлов.

// Одна из причин этого ограничения заключается в том, что React должен иметь все необходимые данные перед отображением страницы.

//# Что делать, если мне нужно получить данные во время запроса?
// Поскольку статическая генерация происходит один раз во время сборки, она не подходит для данных, которые часто обновляются или изменяются при каждом запросе пользователя.

// В подобных случаях, когда ваши данные могут измениться, вы можете использовать рендеринг на стороне сервера . Давайте узнаем больше о рендеринге на стороне сервера в следующем разделе.


