//# Перехватывающие маршруты
// Перехват маршрутов позволяет вам загрузить маршрут из другой части вашего приложения в текущем макете. Эта парадигма маршрутизации может быть полезна, если вы хотите отобразить содержимое маршрута без переключения пользователя на другой контекст.

// Например, нажав на photo(фотографию) в feed(ленте), вы можете отобразить модальное окно с фотографией, накладываясь на ленту. В этом случае Next.js перехватывает маршрут /photo/123, маскирует URL-адрес и накладывает его на ленту.

//* Card.tsx
<Link href="/photo/123">...</Link>;

// Однако при переходе к фотографии путем щелчка по общему URL-адресу или обновления страницы вместо модального окна должна отображаться вся страница с фотографией. Никакого перехвата маршрута происходить не должно.

//# Соглашение
// Перехватывающие маршруты можно определить с помощью соглашения (..), которое аналогично соглашению об относительном пути ../, но для сегментов.

/* Вы можете использовать:
- (.) для сопоставления сегментов на одном уровне
- (..) для сопоставления сегментов на уровень выше
- (..)(..) для сопоставления сегментов двумя уровнями выше
- (...) для сопоставления сегментов из корневого каталога приложения
*/

// Например, вы можете перехватить сегмент photo из сегмента feed, создав каталог фотографий (..).

/*
feed
  layout.js
  (..)photo
    [id]
      page.js
photo
  [id]
    page.js
layout.js
page.js
*/

// Обратите внимание, что соглашение (..) основано на сегментах маршрута, а не на файловой системе.

//# Модальные окна (ПРИМЕР)
// Перехватывающие маршруты можно использовать вместе с параллельными маршрутами для создания модальных окон.

/* Использование этого шаблона для создания модальных окон позволяет решить некоторые распространенные проблемы при работе с модальными окнами, позволяя:
- Сделайте модальный контент доступным для совместного использования через URL-адрес.
- Сохранять контекст при обновлении страницы вместо закрытия модального окна
- Закройте модальное окно при обратной навигации, а не переходите на предыдущий маршрут.
- Снова откройте модальное окно навигации вперед.
*/

/*
feed
  @modal
    (..)photo
      [id]
        page.js
photo
  [id]
    page.js
*/

//* feed/@modal/(..)photo/[id]/page.js
function PhotoModal({ params }) {
  const photo = photos.find(p => {
    p.id === params.id;
  });
  return (
    <Modal>
      <Photo photo={photo} />
    </Modal>
  );
}

//* photo/[id]/page.js
function PhotoPage({ params }) {
  const photo = photos.find(p => {
    p.id === params.id;
  });
  return <Photo photo={photo} />;
}


