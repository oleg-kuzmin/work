//# Обработка ошибок
/*
Соглашение о файлах error.js позволяет корректно обрабатывать непредвиденные ошибки времени выполнения во вложенных маршрутах.
- Автоматически переносить сегмент маршрута и его вложенные дочерние элементы в React Error Boundary.
- Создайте пользовательский интерфейс ошибок, адаптированный к конкретным сегментам, используя иерархию файловой системы для настройки детализации.
- Изолируйте ошибки в затронутых сегментах, сохраняя при этом функциональность остальной части приложения.
- Добавьте функциональность, позволяющую попытаться восстановиться после ошибки без полной перезагрузки страницы.
*/

// Создайте пользовательский интерфейс ошибок, добавив файл error.js внутри сегмента маршрута и экспортировав компонент React:

/*
app
  layout.js
  dashboard
    layout.js
    error.js
    page.js
*/

//* app/dashboard/error.tsx
'use client'; // Компоненты ошибок должны быть клиентскими компонентами.

import { useEffect } from 'react';

export default function Error({ error, reset }) {
  useEffect(() => {
    // Зарегистрируйте ошибку в службе отчетов об ошибках.
    console.error(error);
  }, [error]);

  return (
    <div>
      <h2>Something went wrong!</h2>
      <button
        onClick={
          // Попытайтесь восстановиться, попытавшись повторно отрисовать сегмент.
          () => reset()
        }
      >
        Try again
      </button>
    </div>
  );
}

//# Как работает error.js
