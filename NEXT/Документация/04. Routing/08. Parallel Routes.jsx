//# Параллельные маршруты
// Параллельная маршрутизация позволяет одновременно или условно отображать одну или несколько страниц в одном макете. Для высокодинамичных разделов приложения, таких как информационные панели и каналы социальных сайтов, параллельная маршрутизация может использоваться для реализации сложных шаблонов маршрутизации.

// Например, вы можете одновременно отображать страницы team и analytics.

/*
app
  @team
    page.js
  @analytics
    page.js
  layout.js
  page.js
*/

//* layout.js
function layout(props) {
  return (
    <>
      {props.children}
      {props.team}
      {props.analytics}
    </>
  );
}

// Параллельная маршрутизация позволяет определять независимые состояния ошибок и загрузки для каждого маршрута, поскольку они передаются независимо.

/*
app
  @team
    page.js
    error.js
    loading.js
  @analytics
    page.js
    error.js
    loading.js
  layout.js
*/

// Параллельная маршрутизация также позволяет условно отображать слот на основе определенных условий, например состояния аутентификации. Это позволяет полностью отделить код для одного и того же URL-адреса.

//* layout.js
import { getUser } from '@/lib/auth';

function layout({ dashboard, login }) {
  const isLoggedIn = getUser();
  return isLoggedIn ? dashboard : login;
}
