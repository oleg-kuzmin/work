//# Организация проекта и размещение файлов
// Помимо соглашений о маршрутизации папок и файлов, Next.js не имеет мнения о том, как вы организуете и размещаете файлы вашего проекта.

// На этой странице представлено поведение по умолчанию и функции, которые вы можете использовать для организации своего проекта.

//# Организация по умолчанию
// В каталоге app иерархия вложенных папок определяет структуру маршрута.

// Каждая папка представляет собой сегмент маршрута, который сопоставлен с соответствующим сегментом в URL-пути.

// Однако, несмотря на то, что структура маршрута определяется с помощью папок, маршрут не является общедоступным, пока файл page.js или route.js не будет добавлен в сегмент маршрута.

/*
app
  dashboard       => /dashboard           (Not Routable)
    settings      => /dashboard/settings  (Not Routable)
  api             => /api                 (Not Routable)
*/

// И даже когда маршрут становится общедоступным, клиенту отправляется только контент, возвращаемый page.js или route.js.

/*
app
  dashboard
    page.js       => /dashboard           (Routable)
    settings
      page.js     => /dashboard/settings  (Routable)
  api
    page.js       => /api                 (Routable)
*/

// Это означает, что файлы проекта можно безопасно размещать внутри сегментов маршрута в каталоге приложения, не допуская случайной маршрутизации.

/*
app
  components
    button.js     => /components/button   (Not Routable)
  lib
    constants.js  => /lib/constants       (Not Routable)
  dahboard
    page.js       => /dahboard            (Routable)
    nav.js        => /dahboard/nav        (Not Routable)
  api
    route.js      => /api                 (Routable)
    db.js         => /api/db              (Not Routable)
*/

/*
Хорошо знать:
- Это отличается от каталога pages, где любой файл в pages считается маршрутом.
- Хотя вы можете размещать файлы проекта в app, в этом нет необходимости. Если вы предпочитаете, вы можете хранить их вне каталога app.
*/

//# Особенности организации проекта
// Next.js предоставляет несколько функций, которые помогут вам организовать ваш проект.

//# Приватные папки
// Приватные папки можно создать, добавив к имени папки подчеркивание: _folderName.

// Это указывает на то, что папка является частной деталью реализации и не должна учитываться системой маршрутизации, что исключает папку и все ее подпапки из маршрутизации.

/*
dashboard
  _components
    button.js
    ...
  _lib
    format-date.js
*/

/*
Поскольку файлы в каталоге app по умолчанию можно безопасно размещать вместе, для совместного размещения не требуются приватные папки.Однако они могут быть полезны для:
- Отделение логики пользовательского интерфейса от логики маршрутизации.
- Последовательная организация внутренних файлов в проекте и экосистеме Next.js.
- Сортировка и группировка файлов в редакторах кода.
- Предотвращение потенциальных конфликтов имен с будущими соглашениями о файлах Next.js.
*/

/*
Хорошо знать
- Хотя это и не является соглашением платформы, вы также можете рассмотреть возможность пометки в том числе файлов за пределами приватных папок как приватных, используя тот же шаблон подчеркивания.
- Вы можете создавать сегменты URL-адресов, начинающиеся с подчеркивания, добавляя к имени папки префикс %5F (форма подчеркивания, закодированная в URL-адресе): %5FfolderName.
- Если вы не используете приватные папки, было бы полезно знать специальные соглашения о файлах Next.js, чтобы предотвратить непредвиденные конфликты имен.
*/

//# Группы маршрутов

