//# indexOf
// Этот метод служит для поиска. Он определён для массивов и строк. При вызове нужно передать, что искать. Вернётся индекс первого найденного элемента или -1, если ничего не нашлось.

//# синтаксис
arr.indexOf(searchElement, fromIndex);
/*
* searchElement
Элемент, который нужно найти в массиве.

* fromIndex
Индекс с отсчетом от нуля, с которого следует начать поиск.
1) Если fromIndex больше или равен arr.length, возвращается -1, что означает, что массив даже не просматривается.
2) Если fromIndex является отрицательным числом, он трактуется как смещение с конца массива. Обратите внимание: если индекс отрицателен, массив всё равно просматривается от начала к концу.
3) Если рассчитанный индекс оказывается меньше 0, поиск ведётся по всему массиву. Значение по умолчанию равно 0, что означает, что просматривается весь массив. */

//# пример
//* для массивов
const arrayHaystack = ["Петя", "Настя", "Артур", "Лена", "Настя"];
console.log(arrayHaystack.indexOf("Лена")); // 3
console.log(arrayHaystack.indexOf("Настя")); // 1
console.log(arrayHaystack.indexOf("Эдуард Аркадьевич")); // -1

//* для строк
const stringHaystack = "Мама мыла раму";
console.log(stringHaystack.indexOf("а")); // 1
console.log(stringHaystack.indexOf("мыла")); // 5
console.log(stringHaystack.indexOf("ё")); // -1

//# общая информация
/* Для массивов: ищет переданный элемент в массиве. Если элемент один, то возвращает индекс этого элемента. Если элементов много — возвращает индекс первого подходящего элемента. Элемента в массиве нет — вернёт -1
- Для строк: работает так же, как с массивами, но можно искать не только буквы в строке, но и подстроки.
- Не используйте indexOf() для проверки вхождения элемента в массив/строку, для этого есть метод includes(). Раньше методом indexOf() часто проверяли, есть ли элемент в массиве. Эта задача проще, индекс здесь не нужен, но других методов для этого не было.
- Из-за того, что indexOf() возвращает индекс, в условии обязательно нужна проверка (>= 0 или !== -1). Дело в том, что JavaScript интерпретирует ненулевые числа как истину (true) и будет запускать первую ветку if. А на первом элементе indexOf() вернёт 0, что считается ложным (false), и наш скрипт не запустит. */
