//# while
// Управляющая конструкция, которая создаёт цикл.

//# синтаксис
while (условие) {
  //тело цикла
}

/*
1) Условие — тут задаётся условие по которому выполняется цикл. Если условие ложно, работа цикла прекращается и тело цикла не выполняется.
2) Тело цикла — это блок операций, которые будут выполнены в случае если условие истинно.*/

//# пример
const numbers = [1, 2, 3, 4, 5];

//* общий
let i = 0;
while (i < numbers.length) {
  const currentElement = numbers[i];
  console.log(currentElement * currentElement); // 1, 4, 9, 16, 25
  i++;
}

//* вариант с приведением типов в условии цикла
let count = numbers.length;
while (count) {
  console.log(count); // 5, 4, 3, 2, 1
  count--;
}

//# общая информация
/* Всегда используйте альтернативы циклу while, которые лучше подходят под задачу. Например, у массивов есть много удобных методов: forEach(), filter(), map(). Они лучше читаются и содержат меньше кода.
- Следите, чтобы условие менялось с каждым выполнением тела цикла. Если этого не происходит, то, скорее всего, цикл будет бесконечным.
- while более гибкий цикл чем for, но при его написании легко совершить ошибку. Момент инициализации и изменения переменных в for (операция инициализации и шага) заранее определены. Их можно нарушить, но это не будет хорошо читаться. while предоставляет полную свободу организовывать цикл как угодно, это полностью ручное управление. Можно легко забыть написать что-либо — чаще всего забывают менять переменную из условия в теле цикла.*/
