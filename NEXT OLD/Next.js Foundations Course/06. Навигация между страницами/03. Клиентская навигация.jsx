//# Клиентская навигация
// Компонент Link обеспечивает навигацию на стороне клиента между двумя страницами в одном приложении Next.js.

// Навигация на стороне клиента означает, что переход между страницами происходит с использованием JavaScript, что происходит быстрее, чем навигация по умолчанию, выполняемая браузером.

/*
Вот простой способ проверить это:
- Используйте инструменты разработчика браузера, чтобы изменить свойство background CSS <html> на yellow.
- Нажимайте на ссылки, чтобы переходить между двумя страницами вперед и назад.
- Вы увидите, что желтый фон сохраняется между переходами страниц.
*/

// Это показывает, что браузер не загружает всю страницу и навигация на стороне клиента работает.

// Если вы использовали <a href="…"> вместо <Link href="…"> и сделали это, цвет фона будет очищаться при щелчке по ссылке, поскольку браузер выполняет полное обновление.

//# Разделение кода и предварительная выборка
// Next.js автоматически разделяет код, поэтому каждая страница загружает только то, что необходимо для этой страницы. Это означает, что при отображении домашней страницы код для других страниц изначально не обслуживается.

// Это гарантирует быструю загрузку главной страницы, даже если у вас сотни страниц.

// Загрузка только кода запрашиваемой вами страницы также означает, что страницы становятся изолированными. Если на определенной странице выдается ошибка, остальная часть приложения все равно будет работать.

// Более того, в производственной сборке Next.js всякий раз, когда компоненты Link появляются в области просмотра браузера, Next.js автоматически предварительно выбирает код для связанной страницы в фоновом режиме. К тому времени, когда вы нажмете на ссылку, код целевой страницы уже будет загружен в фоновом режиме, и переход страницы произойдет практически мгновенно!

//# Краткое содержание
// Next.js автоматически оптимизирует ваше приложение для достижения максимальной производительности за счет разделения кода, навигации на стороне клиента и предварительной выборки (в рабочей среде).

// Вы создаете маршруты в виде файлов pages и используете встроенный компонент Link. Никакие библиотеки маршрутизации не требуются.

// Подробнее о компоненте Link читайте в справочнике по APInext/link, и в документации по маршрутизации.

// Примечание. Если вам нужна ссылка на внешнюю страницу за пределами приложения Next.js, просто используйте тег <a> без расширения Link.
