//# Что такое сеть?
// Полезно знать, где хранится и запускается код вашего приложения после его развертывания в сети. Вы можете думать о сети как о связанных компьютерах (или серверах), способных совместно использовать ресурсы. В случае приложения Next.js код вашего приложения может быть распространен на исходные серверы, сети доставки контента (CDN) и Edge. Давайте посмотрим, что представляет собой каждый из них:

//# Исходные серверы
// Как мы обсуждали ранее, под сервером понимается главный компьютер, на котором хранится и выполняется исходная версия кода вашего приложения.

// Мы используем термин «происхождение», чтобы отличить этот сервер от других мест, куда может распространяться код приложения, таких как серверы CDN и пограничные серверы.

// Когда исходный сервер получает запрос, он выполняет некоторые вычисления перед отправкой ответа. Результат этой вычислительной работы можно переместить в CDN (сеть доставки контента).

//# Сеть доставки контента
// CDN хранят статический контент (например, HTML и файлы изображений) в нескольких местах по всему миру и размещаются между клиентом и исходным сервером. Когда поступает новый запрос, ближайшее к пользователю местоположение CDN может ответить кэшированным результатом.

// Это снижает нагрузку на источник, поскольку вычисления не должны выполняться при каждом запросе. Это также ускоряет работу пользователя, поскольку ответ приходит из географически более близкого к нему места.

// В Next.js, поскольку предварительный рендеринг можно выполнить заранее, CDN хорошо подходят для хранения статического результата работы, что ускоряет доставку контента.

//# Edge
// Edge — это обобщенное понятие периферии (или края) сети, ближайшей к пользователю. CDN можно считать частью «границы», поскольку они хранят статический контент на границе (границе) сети.

// Подобно CDN, пограничные серверы распределены по нескольким местам по всему миру. Но в отличие от CDN, которые хранят статический контент, некоторые пограничные серверы могут запускать небольшие фрагменты кода.

// Это означает, что как кэширование, так и выполнение кода могут выполняться на Edge, ближе к пользователю.

// Перенеся часть работы, которая традиционно выполнялась на стороне клиента или сервера, на Edge, вы можете повысить производительность своего приложения, поскольку это уменьшает объем кода, отправляемого клиенту, и часть пользовательского запроса не должна выполняться полностью. обратный путь к исходному серверу, что снижает задержку.

// В Next.js вы можете запускать код на Edge с помощью Middleware, а вскоре и с помощью React Server Components.

//# Следующие шаги
// Поздравляем с окончанием курса Next.js Foundations!

// Чтобы продолжить изучение Next.js, мы рекомендуем вам создать свое первое приложение Next.js с помощью нашего руководства, которое познакомит вас с основными функциями.

// Вы также можете ознакомиться с нашей документацией и изучить наш обширный список примеров.

//# Присоединиться к разговору
// Если у вас есть какие-либо вопросы, вы можете задать их нашему сообществу в Discord или обсуждениях GitHub.
