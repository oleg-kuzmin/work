//# Введение
// Чтобы эффективно использовать Next.js, необходимо знать JavaScript, React и связанные с ними концепции веб-разработки. Но JavaScript и React — это обширные темы. Как узнать, что вы готовы изучать Next.js?

// Добро пожаловать на курс «Основы Next.js»! Этот ориентированный на новичков курс с примерами проведет вас через необходимые знания для Next.js. Вы шаг за шагом создадите простой проект; начиная с приложения JavaScript, а затем перенося его на React и Next.js.

// Каждый раздел основан на предыдущем, поэтому вы можете выбрать, с чего начать, в зависимости от того, что вы уже знаете.

// В этом руководстве предполагается знание HTML, CSS, JavaScript и отсутствие знаний React. Если вы уже знакомы с React, вы можете перейти к разделу «Начало работы с Next.js» или «Создание своего первого приложения Next.js».

//# Присоединиться к разговору
// Если у вас есть вопросы о чем-либо, связанном с Next.js или этим курсом, вы можете задать их нашему сообществу на Discord.

// Давайте начнем!

//# Что такое Next.js?
// Next.js — это гибкая среда React, которая предоставляет вам строительные блоки для создания быстрых веб-приложений.

// Но что именно мы под этим подразумеваем? Давайте потратим немного времени на то, что такое React и Next.js и как они могут помочь.

//# Строительные блоки веб-приложения
/*
Есть несколько вещей, которые необходимо учитывать при создании современных приложений. Такой как:
1. Пользовательский интерфейс — как пользователи будут использовать ваше приложение и взаимодействовать с ним.
2. Маршрутизация — как пользователи перемещаются между различными частями вашего приложения.
3. Извлечение данных — где хранятся ваши данные и как их получить.
4. Рендеринг — когда и где вы визуализируете статический или динамический контент.
5. Интеграции — какие сторонние сервисы вы используете (CMS, аутентификация, платежи и т. д.) и как вы к ним подключаетесь.
6. Инфраструктура — место, где вы развертываете, храните и запускаете код своего приложения (бессерверное, CDN, Edge и т. д.).
7. Производительность — как оптимизировать ваше приложение для конечных пользователей.
8. Масштабируемость — как ваше приложение адаптируется по мере роста вашей команды, данных и трафика.
9. Опыт разработчика — опыт вашей команды в создании и сопровождении вашего приложения.
*/

// Для каждой части вашего приложения вам нужно будет решить, будете ли вы создавать решение самостоятельно или использовать другие инструменты, такие как библиотеки и платформы.

//# Что такое Реакт?
// React — это библиотека JavaScript для создания интерактивных пользовательских интерфейсов.

// Под пользовательскими интерфейсами мы подразумеваем элементы, которые пользователи видят и с которыми взаимодействуют на экране.

// Под библиотекой мы подразумеваем, что React предоставляет полезные функции для создания пользовательского интерфейса, но оставляет на усмотрение разработчика, где использовать эти функции в своем приложении.

// Частично успех React заключается в том, что он относительно непредвзято относится к другим аспектам создания приложений. Это привело к появлению процветающей экосистемы сторонних инструментов и решений.

// Однако это также означает, что создание полноценного приложения React с нуля требует некоторых усилий. Разработчикам приходится тратить время на настройку инструментов и переосмысление решений для общих требований приложений.

//# Что такое Next.js?
// Next.js — это платформа React, которая предоставляет вам строительные блоки для создания веб-приложений.

// Под фреймворком мы подразумеваем, что Next.js обрабатывает инструменты и настройки, необходимые для React, а также обеспечивает дополнительную структуру, функции и оптимизации для вашего приложения.

// Вы можете использовать React для создания своего пользовательского интерфейса, а затем постепенно внедрять функции Next.js для решения общих требований приложений, таких как маршрутизация, получение данных, интеграция — и все это при одновременном улучшении опыта разработчиков и конечных пользователей.

// Независимо от того, являетесь ли вы индивидуальным разработчиком или частью более крупной команды, вы можете использовать React и Next.js для создания полностью интерактивных, высокодинамичных и производительных веб-приложений.

// В следующих уроках мы обсудим, как начать работу с React и Next.js.
