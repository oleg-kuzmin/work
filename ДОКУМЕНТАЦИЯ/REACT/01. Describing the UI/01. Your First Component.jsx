//# Ваш первый компонент
// Компоненты — одна из основных концепций React. Они являются основой, на которой вы строите пользовательские интерфейсы (UI), что делает их идеальным местом для начала вашего путешествия по React!

/*
Ты выучишь:
- Что такое компонент
- Какую роль компоненты играют в приложении React
- Как написать свой первый компонент React
*/

//# Компоненты: строительные блоки пользовательского интерфейса.
// В Интернете HTML позволяет нам создавать богато структурированные документы с помощью встроенного набора тегов, таких как <h1>и <li>:

<article>
  <h1>My First Component</h1>
  <ol>
    <li>Components: UI Building Blocks</li>
    <li>Defining a Component</li>
    <li>Using a Component</li>
  </ol>
</article>;

// Эта разметка представляет данную статью <article>, ее заголовок <h1>и (сокращенное) оглавление в виде упорядоченного списка <ol>. Подобная разметка в сочетании с CSS для стиля и JavaScript для интерактивности лежит за каждой боковой панелью, аватаром, модальным окном, раскрывающимся списком — за каждой частью пользовательского интерфейса, который вы видите в Интернете.

// React позволяет объединить разметку, CSS и JavaScript в пользовательские «компоненты», повторно используемые элементы пользовательского интерфейса для вашего приложения. Код оглавления, который вы видели выше, можно превратить в <TableOfContents />компонент, который можно отображать на каждой странице. Внутри он по-прежнему использует те же HTML-теги, что и <article>, <h1>и т. д.

// Как и в случае с HTML-тегами, вы можете компоновать, упорядочивать и вкладывать компоненты для создания целых страниц. Например, страница документации, которую вы читаете, состоит из компонентов React:

<PageLayout>
  <NavigationHeader>
    <SearchBar />
    <Link to="/docs">Docs</Link>
  </NavigationHeader>
  <Sidebar />
  <PageContent>
    <TableOfContents />
    <DocumentationText />
  </PageContent>
</PageLayout>;

// По мере роста вашего проекта вы заметите, что многие из ваших проектов могут быть составлены путем повторного использования уже написанных вами компонентов, что ускоряет вашу разработку. Наше оглавление можно добавить на любой экран с помощью <TableOfContents />! Вы даже можете начать свой проект с помощью тысяч компонентов, которыми пользуется сообщество React с открытым исходным кодом, таких как Chakra UI и Material UI.

//# Определение компонента
// Традиционно при создании веб-страниц веб-разработчики размечали их контент, а затем добавляли взаимодействие, добавляя немного JavaScript. Это отлично работало, когда взаимодействие в сети было приятным. Теперь это ожидается для многих сайтов и всех приложений. React ставит интерактивность на первое место, но при этом использует ту же технологию: компонент React — это функция JavaScript, которую вы можете добавить разметку. Вот как это выглядит (вы можете отредактировать пример ниже):

export default function Profile() {
  return <img src="https://i.imgur.com/MK3eW3Am.jpg" alt="Katherine Johnson" />;
}

// А вот как построить компонент:

//* Шаг 1. Экспортируйте компонент
// Префикс export default представляет собой стандартный синтаксис JavaScript (не специфичный для React). Он позволяет пометить основную функцию в файле, чтобы позже можно было импортировать ее из других файлов. (Подробнее об импорте см. в разделе «Импорт и экспорт компонентов»!)

//* Шаг 2: Определите функцию
// Вы function Profile() { } определяете функцию JavaScript с именем Profile.

//! ловушка
// Компоненты React — это обычные функции JavaScript, но их имена должны начинаться с заглавной буквы , иначе они не будут работать!
//! ловушка

//* Шаг 3. Добавьте разметку
// Компонент возвращает <img />тег с атрибутами srcи alt. <img />написан как HTML, но на самом деле это JavaScript под капотом! Этот синтаксис называется JSX и позволяет встраивать разметку в JavaScript.

// Операторы возврата могут быть записаны в одну строку, как в этом компоненте:
function Profile() {
  return <img src="https://i.imgur.com/MK3eW3As.jpg" alt="Katherine Johnson" />;
}

// Но если ваша разметка не вся находится на той же строке, что и return ключевое слово, вы должны заключить ее в пару круглых скобок:
function Profile() {
  return (
    <div>
      <img src="https://i.imgur.com/MK3eW3As.jpg" alt="Katherine Johnson" />
    </div>
  );
}

//! ловушка
// Без круглых скобок любой код в последующих строках return будет игнорироваться!
//! ловушка

//# Использование компонента

