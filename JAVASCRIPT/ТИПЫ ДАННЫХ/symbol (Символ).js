//# symbol (Символ)
/*
- Тип symbol (символ) используется для создания уникальных идентификаторов в объектах.
- Каждый созданный символ уникален.
- Символы могут использоваться в качестве имён свойств в объектах. Символьные свойства могут быть прочитаны только при прямом обращении и не видны при обычных операциях.
- Символы используются для создания скрытых свойств объектов. В отличие от свойств, ключом которых является строка, символьные свойства может читать только владелец символа. Скрытые свойства не видны при его обходе с помощью for...in:
- Это может пригодиться, когда необходимо добавить свойства объекту, который могут модифицировать другие части программы. Таким образом только вы сможете читать созданное свойство, а гарантия уникальности символов гарантирует и отсутствие конфликтов имён.
*/

//# Создание
// Для создания символа нужно вызвать функцию Symbol. Создание символа через конструктор new Symbol() не поддерживается.
// При создании символа первым аргументом можно передать его описание (const mySym = Symbol('name')). Оно ни на что не влияет и необходимо только для отладки. Даже если описания символов совпадают, JavaScript всё равно создаёт уникальные символы.
const sym = Symbol();
const symTwo = Symbol();
console.log(sym === symTwo); // false

//# Использование
const secondaryId = Symbol();
const user = {
  id: 193,
  name: 'Ольга',
  [secondaryId]: 'olga-1',
};
console.log(user[secondaryId]); // olga-1

//# Глобальный реестр символов
/*
- Созданный символ уникален, но как быть, если он нужен в нескольких местах программы? Для решения этой проблемы существует глобальный реестр символов, он хранит символы по строковым ключам. При обращении по ключу всегда будет возвращаться один и тот же символ.

- Работа с реестром символов организована с помощью двух методов:
Symbol.for(ключ) — возвращает символ, хранящийся по ключу. Если символа ещё не существует, он создаётся автоматически.
Symbol.keyFor(символ) — возвращает строковый ключ, который хранит переданный символ или undefined, если символ не хранится в реестре.
*/

const newSym = Symbol.for('registryKey');
const newestSym = Symbol.for('registryKey');
console.log(newSym === newestSym); // true

user[newSym] = 'hello';
console.log(Symbol.keyFor(newSym)); // registryKey
