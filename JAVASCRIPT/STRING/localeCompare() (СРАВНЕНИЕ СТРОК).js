//# localeCompare() (СРАВНЕНИЕ СТРОК)
// Сравнивает значение строк.

//# Синтаксис
string.localeCompare(compareString, locales, options);

//* 1. compareString - cтрока, которую нужно сравнить со строковым объектом string

//* 2. locales - строка с языковым тегом BCP 47 или массив таких строк (опционально)
// Соответствует параметру locales конструктора Intl.Collator(). В реализациях без поддержки Intl.Collator этот параметр игнорируется и обычно используется языковой стандарт хоста.

//* 3. options - Объект, настраивающий выходной формат (опционально)
// Соответствует параметру options конструктора Intl.Collator(). В реализациях без поддержки Intl.Collator этот параметр игнорируется.

//# Возвращает
//* Число
/*
1. Если строка string должна располагаться по алфавиту перед строковым аргументом compareString, возвращается отрицательное число (обычно -1, но вообще значение может за­ висеть от реализации браузера и его версии).

2. Если строка string равна строковому аргументу compareString, возвращается 0.

3. Если строка string должна располагаться по алфавиту после строкового аргумента compareString, возвращается положительное число (обычно 1, но значение опять же может зависеть от реализации).
*/

//# Пример
const a = 'réservé'; // With accents, lowercase
const b = 'RESERVE'; // No accents, uppercase

console.log(a.localeCompare(b)); // Expected output: 1
console.log(a.localeCompare(b, 'en', { sensitivity: 'base' })); // Expected output: 0
