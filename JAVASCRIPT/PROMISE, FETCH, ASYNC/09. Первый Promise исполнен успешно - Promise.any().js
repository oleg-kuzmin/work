//# Первый Promise исполнен успешно - Promise.any()
/*
- Метод очень похож на Promise.race, но ждёт только первый успешно выполненный промис, из которого берёт результат.
- Если ни один из переданных промисов не завершится успешно, тогда возвращённый объект Promise будет отклонён с помощью AggregateError – специального объекта ошибок, который хранит все ошибки промисов в своём свойстве errors.
*/

//# Пример
// Первый промис в этом примере был самым быстрым, но он был отклонён, поэтому результатом стал второй. После того, как первый успешно выполненный промис «выиграет гонку», все дальнейшие результаты будут проигнорированы.
Promise.any([
  new Promise((resolve, reject) => setTimeout(() => reject(new Error('Ошибка!')), 1000)),
  new Promise((resolve, reject) => setTimeout(() => resolve(1), 2000)),
  new Promise((resolve, reject) => setTimeout(() => resolve(3), 3000)),
]).then(alert); // 1
