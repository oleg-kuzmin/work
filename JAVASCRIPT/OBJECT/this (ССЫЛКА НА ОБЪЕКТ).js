//# this (ССЫЛКА НА ОБЪЕКТ)
/*
- this — ключевое слово, которое используется для доступа к полям объекта внутри метода. При обращении к this возвращается ссылка на объект, внутри которого реализовано это обращение.
- значение this определяется не в момент объявления, а в момент выполнения.
*/

const object = {
  prop: 'Свойство',
  method: function () {
    console.log(this);
  },
};

object.method(); // В консоль выводится object — объект, на котором вызван метод method

//# Приоритет привязки
//* 1. Привязка по умолчанию - function()
/*
- Это тот случай, когда вы просто вызываете функцию по её имени, то есть пишете имя функции и круглые скобки. Тогда this принимает одно из двух значений:
1. undefined — в строгом режиме,
2. window — в обычном.
*/

function globalFunction() {
  console.log(this);
}
globalFunction(); // Window — this ссылается на глобальный объект window

//* 2. Вызов метода объекта или неявная привязка - object.globalFunction()
// Обратите внимание, что мы изменили точку вызова функции. Раньше мы вызывали её из глобальной области видимости, а теперь — как метод объекта window. Так мы неявно указали контекст — window.
window.myData = 'Important data';

function globalFunction() {
  'use strict';
  console.log(this.myData);
}

window.globalFunction(); // 'Important data'

//*
