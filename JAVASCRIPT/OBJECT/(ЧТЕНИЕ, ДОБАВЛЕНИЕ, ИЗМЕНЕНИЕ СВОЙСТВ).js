//# (ЧТЕНИЕ, ДОБАВЛЕНИЕ, ИЗМЕНЕНИЕ СВОЙСТВ)
/*
- Если прочитать свойство, которого нет у объекта, то вернётся undefined.
- Если попытаться у свойства, котороe undefined, дальше получить еще какое-то свойство, то мы получим ошибку "Cannot read properties of undefined"
- Избежать этого можно использовав синтаксис опциональной цепочки.
- Если ключ содержит пробел, то обращаться к нему возможно только через квадратные скобки.
*/

const bookExample = {
  title: 'Капитанская дочка',
};

//* через точку (чтение)
console.log(`На полке стоит «${book.title}»`);

//* через квадратные скобки (чтение)
// Если при записи нового свойства мы передаём значение ключа, которое не является строкой, оно автоматически преобразуется в строку. И наоборот — если при доступе к свойству в квадратных скобках указать значение, не являющееся строкой, оно преобразуется в строку. Хотя такой код и работает, лучше передавать ключ строкой.

console.log(`На полке стоит «${book['title']}»`);
console.log(obj[key]);

//* через точку (добавление и изменение)
bookExample.author = 'А.С.Пушкин'; // добавляем новое свойство
bookExample.title = 'Сказка о царе Салтане'; // изменяем существующее

//* через квадратные скобки (добавление и изменение)
book['author'] = 'А.С.Пушкин'; // добавляем новое свойство
book['title'] = 'Сказка о царе Салтане'; // изменяем существующее

//* нестандартные ключи
const obj = {
  simpleName: true,
  'как хочу, так и называю': true,
  '123anarchy!!!': true,
};

obj['как хочу, так и называю']; // true
obj['123anarchy!!!']; // true
