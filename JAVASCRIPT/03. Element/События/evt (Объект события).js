//# evt (Объект события)
/*
У события 3 фазы:
1) Capture (погружение) (событие идет сверху вниз от родителя к детям)
2) Target (цель) (событие достигло целевого назначения)
3) Bubbling (всплытие) (событие начинает всплывать обратно к родителю)
*/

//# evt.detail
// Количество кликов, которые произвёл пользователь. 1 — для одиночного клика, 2 — для двойного и так далее.

//# evt.view
// Возвращает объект window, в котором произошло событие.

//# evt.preventDefault();
// Отмена стандартного события

//# evt.key
// Хранит название нажатой клавиши

//# evt.keyCode (устарел)
// Хранит уникальный код нажатой клавиши

//# evt.pageX и evt.pageY
// Координаты по горизонтали и вертикали от угла веб-страницы

//# evt.clientX и evt.clientY
// Координаты относительно угла окна просмотра

//# evt.screenX и evt.screenY
// Координаты относительно угла монитора, на котором открыт сайт. Они используются крайне редко

//# evt.stopPropagation()
// Метод stopPropagation останавливает всплытие событий на элементе (дальше элемента всплытие не пойдет)
function callback(evt) {
  evt.stopPropagation();
}

//# evt.stopImmediatePropagation()
/*
- Отменяет не только всплытие событий, но и срабатывание всех других обработчиков того же события на этом элементе.
- Остановит только те обработчики, которые описаны после него. Он попросту не знает о тех, которые стоят в коде раньше.
*/
element.addEventListener('click', function (evt) {
  evt.stopImmediatePropagation();
});

//# evt.target
// Хранит элемент, на котором сработало событие (самый глубокий элемент DOM-дерева из всех, где сработало событие)

//# evt.currentTarget
// Элемент, где сработал обработчик (тот, на который мы повесили обработчик)

//# evt.type
// Тип события.

//# evt.isTrusted
// Проверяет пользователь ли сделал клик (защита от бота).
