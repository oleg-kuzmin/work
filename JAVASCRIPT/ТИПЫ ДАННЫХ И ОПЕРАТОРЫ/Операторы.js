//# Логические
// Если значение не логического типа, то оно к нему приводится в целях вычислений.

//*4 value1 && value2 (логическое И - возвращает первое ложное значение или последнее)
/*
- Вернёт истину, когда все булевы переменные истинны.
1. Оператор && идёт по простым условиям слева направо и проверяет каждое.
2. Приводит каждый аргумент к логическому типу true/false. Когда он встречает ложное значение, то останавливается и возвращает его как результат всего условия.
3. Если все операнды являются true - возвращает последний из них.
*/

//*3 value1 || value2 (логическое ИЛИ - возвращает первое истинное значение или последнее)
/*
- Вернёт истину, когда хотя бы одно из булевых переменных истинно.
1. Оператор || идёт по простым условиям слева направо и проверяет каждое.
2. Приводит каждый аргумент к логическому типу true/false. Когда он встречает правдивое значение, то останавливается и возвращает его как результат всего условия.
3. Если все операнды являются false - возвращает последний из них.
*/

//*3 value1 ?? value2 (оператор нулевого слияния - возвращает первый операнд если он не null/undefined или последний)
// Запрещено использовать вместе с || или && без явно указанного приоритета, то есть без скобок.

//# Присваивание
// Присваивание также возвращает значение.
//*2	 =              (присваивание)
//*2	 +=             (присваивание с сложением)
//*2	 -=             (присваивание с вычитанием)
//*2	 *=             (присваивание с умножением)
//*2	 /=             (присваивание с делением)
//*2	 **=            (присваивание с возведением в степень)
//*2   value &&= 10   (присваивание с логическим И - присваивает значение только если value true)
//*2   value ||= 10   (присваивание с логическим ИЛИ - присваивает значение только если value false)
//*2   value ??= 10   (присваивание c нулевым слиянием - присваивает значение только если value null/undefined)

//# Запятая
//*1   ,      (запятая - предоставляет возможность вычислять несколько выражений, возвращает результат последнего)
