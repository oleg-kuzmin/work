//# IIFE (immediately invoked function expression: немедленно вызванное функциональное выражение)
/*
- Immediately Invoked Function Expression, IIFE — это функция, которая выполняется сразу же после того, как была определена.
- Если заключить функцию в скобки, это станет функциональным выражением.
- Поскольку IIFE — функция, все переменные, объявленные внутри неё, не видны снаружи.
- Если обернуть весь код в IIFE, можно полностью избавиться от глобальных переменных в нашем коде.
- Можно использовать именованную функцию, чтобы был читаемый stacktrace. Но допускается и использование анонимной.
- Кроме того, можно добавить ";" в начале функции. Дело в том, что существующий механизм автоподстановки точек с запятой (ASI) срабатывает лишь в определённых случаях, в то время как строка, начинающаяся с (, не входит в перечень этих случаев. Поэтому опытные разработчики зачастую добавляют ; в тех случаях, когда их код может быть скопирован и добавлен в существующий.
*/

//# Синтаксис
(function example() {
  // ...Тело функции
})();

//* 1. Сама функция внутри: function example() { ... }
// Это обычная функция, которая описывается и ведёт себя по всем правилам функций в JS.

//* 2. Скобки вокруг функции: (function foo() { ... })
// Скобки превращают функцию в выражение, которое можно вызвать. То есть если до этого шага мы функцию объявили, то на этом шаге мы приготовили её к мгновенному вызову.

//* 3. Скобки вызова: (function foo() { ... })()
// Последняя пара скобок вызывает выражение, то есть вызывает функцию, которую мы создали на 1-м шаге и подготовили на 2-м.
