//# element.textContent (ТЕКСТОВОЕ СОДЕРЖИМОЕ)
/*
- Свойство textContent позволяет считывать или задавать текстовое содержимое элемента. Обращение к свойству вернёт строку, которая будет состоять из текстового содержимого всех вложенных элементов, даже если они скрыты с помощью CSS и не видны на экране.
- Аналогичной функциональностью, но с некоторыми ограничениями обладает свойство innerText. Оно работает так же, но не включает в себя скрытые элементы.
- Для считывания и изменения текстового содержимого браузер предоставляет свойства innerText и textContent. Запись значения работает идентично для обоих. Значение, которое возвращается при чтении свойств отличается. textContent возвращает строку с содержимым всех вложенных потомков, вне зависимости от того, скрыты они или нет. innerText же возвращает содержимое только видимых элементов.
- Свойство может изменить только текстовое содержимое элемента, потому если присвоить строку, содержащую HTML, то она вставится как простой текст и не превратится в реальные DOM-элементы. Для того чтобы вставлять HTML c помощью строки подойдёт свойство innerHTML.
- Обращение к свойству textContent вернёт текстовое содержимое элемента. Если внутри элемента находятся дочерние узлы, то результат будет являться конкатенацией вызовов textContent для всех этих узлов.
- Установка нового текста с помощью textContent полностью удалит всё старое содержимое и запишет новое текстовое значение. Если внутри элемента были другие вложенные потомки, то все они удалятся.
*/

//# Возвращает
//* Строка с текстовым содержимым элемента.

//# Пример
<section>
  <h1>Заголовок</h1>
  <p>И параграф полезного текста</p>
</section>;

const section = document.querySelector('section');
console.log(section.textContent); // ЗаголовокИ параграф полезного текста

const heading = document.querySelector('h1');
heading.textContent = 'Новый заголовок'; // В результате будет: <h1>Новый заголовок</h1>
