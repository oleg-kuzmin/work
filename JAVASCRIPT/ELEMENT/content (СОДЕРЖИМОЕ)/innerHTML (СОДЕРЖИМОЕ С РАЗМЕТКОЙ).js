//# element.innerHTML (СОДЕРЖИМОЕ С РАЗМЕТКОЙ)
/*
- Свойство innerHTML позволяет получить внутреннее HTML-содержимое элемента в виде строки.
- Свойство innerHTML содержит в себе строку со всем наполнением элемента (в том числе и разметкой).
- Свойство innerHTML позволяет считать содержимое элемента в виде HTML-строки или установить новый HTML.
- Новое значение HTML необходимо передавать в виде строки и оно заменит текущее содержимое элемента. При передаче невалидной HTML-строки будет выброшена ошибка. HTML-строкой является строка, которая содержит валидную HTML-разметку, в innerHTML нельзя передать DOM-элемент.
- Когда в innerHTML присваивается новое значение, все предыдущее содержимое удаляется и создаётся новое, что приводит к перерисовке страницы.
- Обращение к свойству innerHTML вернёт содержимое элемента в виде HTML-строки. Просмотреть или изменить содержимое можно у всех элементов, включая <html> и <body>. Присвоение нового значения к свойству очистит всё текущее содержимое и заменит его новым HTML.
- Стоит помнить, что строка с HTML-разметкой это не DOM-элемент. innerHTML работает только со строками, самостоятельно разбирает её содержимое и создаёт элементы.
- Если передать в innerHTML строку с невалидным HTML, то будет выброшена ошибка. Однако большинство современных браузеров помогают разработчику, умеют самостоятельно дополнять разметку (например если забыли закрыть тег) и даже дают возможность для кастомных тегов. Потому встретить ошибку при передаче в innerHTML невалидного HTML очень сложно.
- Несмотря на то, что с помощью innerHTML можно вставить любой HTML, есть некоторые ограничения, связанные с безопасностью веб-приложений.
- Если передать в innerHTML строку с тегом <script>, то элемент успешно вставится в страницу, но скрипт, который содержится внутри не исполнится. Но исполнить вредоносный код возможно и без тега <script>. Потому не рекомендуется вставлять с помощью innerHTML любой HTML из ненадёжных источников. Например, если вы получаете разметку с неизвестного сервера.
- Так же не рекомендуется использовать innerHTML, если нужно просто изменить текст в элементе. Для этой задачи есть свойство innerText или textContent.
*/

//# Возвращает
//* Строка с html-содержимым элемента.

//# Пример
const form = document.querySelector('form');
console.log(form.innerHTML); // '<label>Логин</label><input type="text" id="login" /><div class="error">Введите логин</div>'
form.innerHTML = '<div class="success">Вход выполнен</div>';

//* ДО
<form>
  <label>Логин</label>
  <input type="text" id="login" />
  <div class="error">Введите логин</div>
</form>;

//* ПОСЛЕ
<form>
  <div class="success">Вход выполнен</div>
</form>;
