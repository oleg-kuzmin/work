//# Атрибут formmethod (МЕТОД ОТПРАВКИ ФОРМЫ)
/*
- Переопределяет method у родительской формы. Аналогичен атрибуту в <form>.
- Применяется к <button type="submit">.
- Может определять, каким способом будут отправлены на сервер данные, которые ввёл пользователь.
- Никогда не используйте method="get", если хочется отправить конфиденциальные данные, потому что их можно будет легко прочитать в запросе, который отправляет форма, и даже в адресной строке браузера.
- Вариант method="get" удобен тем, что полученный URL с ответами можно сохранить в закладки. Например, пользователь может заполнить форму и поделиться ссылкой с результатами с кем-нибудь ещё.
*/

//# Пример
<button formmethod="post" type="submit"></button>;

//# Значения
//* method="get"
/*
Ответы пользователя дописываются в URL в формате «параметр=значение», например «email=name@yandex.ru».
Выглядит это так: site.com/form?name=Oleg&email=name@yandex.ru.
То есть параметр — это то, что вы спрашиваете у пользователя, а значение — его ответ.
Пары «параметр=значение» разделяются знаком &.
Вариант method="get" используется по умолчанию, но у него есть ограничение: URL не должен получиться длиннее, чем 3000 символов.

HTTP-запрос имеет следующий вид:
GET /?user=Oleg&search=Котики HTTP/2.0
Host: yandex.ru
*/

//* method="post"
/*
Данные из формы пакуются в тело формы и отправляются на сервер. В этом случае нет ограничений по объёму данных, поэтому этот способ подойдёт для заполнения базы данных или отправки файлов.

HTTP-запрос имеет следующий вид:
POST / HTTP/2.0
Host: yandex.ru
Content-Type: application/x-www-form-urlencoded
Content-Length: 13
user=Oleg&email=name@yandex.ru
*/

//* method="dialog"
// Если <form> находится внутри <dialog>, то поля формы не очищаются, а сама форма не делает запроса на сервер. Вместо этого, закрывается диалоговое окно. В статье «Работа с формами» можно узнать, как отправить данные на сервер с помощью JavaScript.
