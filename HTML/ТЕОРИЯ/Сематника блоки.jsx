//# Основное содержание страницы, которое не повторяется на других страницах
//* <main>
/*
- Блок, в котором расположен самый основной и важный контент страницы, чтобы поисковик индексировал его с повышенным приоритетом.
- В документе не должно быть больше одного main, у которого нет атрибута hidden.
- В main помещают главное содержимое - то, которое больше нигде не повторяется на сайте.
- Соответственно, второстепенные элементы сюда не входят: шапка сайта, подвал, боковые панели, ссылки навигации, информация об авторских правах, логотипы сайта и поисковые формы, как правило, остаются вне контейнера main.
- Единственный случай, когда поисковую форму стоит положить в main - это когда она является главным элементом на странице, например, на странице поиска.
*/

//# Шапка всего сайта или какой-то части контента
//* <header>
/*
- Шапка всего сайта или какой-то части контента, например, статьи, блок с вводной информацией (логотип, строка поиска, меню, кнопки соцсетей или другие ключевые элементы).
- На странице может быть несколько header.
- Но их нельзя помещать в footer, address или другой header.
*/

//# Подвал сайта или какой-то части контента
//* <footer>
/*
- Подвал сайта (контакты, ссылки на разделы сайта, копирайт, название компании, правовая информацию, ссылки на соцсети).
- Может быть не только у всего сайта целиком, но и у отдельного блока или секции.
- Нельзя вкладывать в address, header или другой footer.
- Контакты и информацию об авторе стоит поместить в контейнер address, а его добавить в footer.
*/

//# крупный смысловой (или «логический») раздел.
//* <section>
/*
- Создаёт независимый блок - например, блок новостей, блок с контактами или просто абзац с заголовком.
- Это семантический тег, который говорит поисковику, что внутри находится важный функциональный блок сайта.
- Тегом section стоит оборачивать большие логические блоки на странице.
- Внутри section обязательно должен быть заголовок h1-h6.
- Контейнеры section можно вкладывать друг в друга, как матрёшку.
- Если вы хотите просто объединить и стилизовать второстепенные элементы, которые не так важны для поисковика, лучше использовать div.
- Section является частью какого-то раздела, а article самодостаточный раздел.
- Небольшая подсказка как отличать смысловые или логические разделы от структурных разделов. Логический раздел вы можете осмысленно назвать одним словом или словосочетанием: «программа обучения», «каталог», «наши преимущества». Если же в голову приходят названия, которые указывают на его положение на странице («шапка», «подвал», «левая колонка»), либо перечисления («новости и галерея», «фильтры и товары»), в таком случае раздел структурный и тег <section> для него не подходит.
*/

//# Навигация на странице
//* <nav>
/*
- Навигация на странице.
- На странице можно использовать несколько nav.
- Спецификация рекомендует не увлекаться разметкой всех ссылок с помощью nav, достаточно указать самые важные.
- Навигация может быть не только по страницам внутри сайта, но и по внешним ресурсам.
- Для блока с перечислением компаний-партнёров со ссылками на их сайты тоже вполне уместно использовать nav.
- Не каждая группа ссылок на странице должна быть обёрнута в <nav>. Например, небольшой блок со вспомогательными ссылками в подвале сайта. Такой блок внутри тега <footer> не нужно дополнительно оборачивать в тег <nav>.
- Кроме того, блок <nav> помимо ссылок может включать абзацы с текстом, заголовки, списки и другое содержание.
- В случае, когда навигация шапки дублируется в подвале сайта, не рекомендуется использовать тег <nav> повторно. Достаточно будет использовать список со ссылками.
*/

//# Цельный, законченный и самостоятельный фрагмент информации, независимый раздел
//* <article>
/*
- Законченный и самодостаточный раздел документа, описывающий какую-то сущность: статья, товар, карточка пользователя, твит, статья на «Хабре», страница на «КиноПоиске».
- Это независимая завершённая сущность, которую можно при необходимости повторно использовать.
- Section является частью какого-то раздела, а article самодостаточный раздел.
- Теги <section> можно использовать внутри <article>, если там нужно выделить отдельные смысловые блоки.
- Точно так же можно использовать <article> внутри <section>, если в логическом разделе документа содержатся независимые контентные блоки.
- Тег <article>, в отличие от <section>, можно вырвать из одного места и вставить в другое (на другую страницу сайта или на другой сайт), и смысл содержимого тега при этом не потеряется.
- Так как <article> должен быть независимым, то при разметке удобно считать его отдельной и самостоятельной страницей сайта.
*/

//# Контактная информация
//* <address>
/*
- Контактные данные, для выделения автора материала.
- Контактная информация: почтовые адреса, адреса электронной почты, номера телефонов, ссылки на соцсети, географические координаты, адреса URL, имена или контактная информация авторов статей.
- Желательно также, чтобы помимо этой информации присутствовало имя человека (или людей), либо название организации.
- Нельзя вкладывать address друг в друга.
- Нельзя вкладывать в параграф с текстом, это не фразовый элемент.
- Внутри нельзя использовать заголовки, секции (section, article, aside, nav), а также header и footer.
*/

//# Дополнительная информация
//* <aside>
/*
- Блок для дополнительной информации.
- В этот тег оборачивается контент, не обязательный для понимания основной информации на сайте: виджеты с оценкой, поиск по сайту, список тем и рубрик, боковая колонка на сайте, навигация.
- Может не иметь отношения к главному (main) контенту сайта.
- Но дополняет пользовательский опыт: поможет выбрать документ или что-то найти.
- Нет никаких ограничений на положение aside, но самое место ему на одном структурном уровне с main и article.
- Визуально блок, обёрнутый в aside, необязательно должен располагаться сбоку.
- Он может быть в любом месте макета.
*/

//# Блок цитат
//* <blockquote>
/*
- Цитата может быть длинной, состоять из нескольких абзацев.
- Для цитаты, которая скрывается в дебрях текста (внутристрочная) есть свой отдельный тег — q.
- Сам этот тег только показывает, где цитата находится.
- Внутри неё нужно разметить текст подходящими по смыслу тегами, например p.
- Указать источник, откуда цитата была взята. Для этого есть cite.
- В теге cite или в атрибуте cite указывается именно источник цитаты (название источника цитаты, либо ссылка на него), а не её автор.
*/

//# Заголовки
//* <h1>
/*
- Заголовки, теги h1-h6 должны соответствовать ключевым запросам, вопросу пользователя.
- Через них сайт настраивается для выдачи в поисковиках.
- Складывается с title страницы в поисковике.
*/

//# Параграф, абзац
//* <p>
/*
- Оборачивайте в тег p как минимум одно полное предложение или текст из нескольких предложений.
*/

//# Горизонтальная линия (смысловое разделение блоков)
//* <hr>
/*
- Декоративные линии лучше свёрстать как псевдоэлементы или т.п.
- Помогает отделить независимые друг от друга блоки — например, подразделы в статье.
- Пользоваться только, когда без разделителя информация теряет смысл или в ней становится трудно разобраться.
- Перед заголовком не стоит ставить hr — заголовок сам по себе является тематическим и визуальным разделителем.
*/

//# Отформатированный текст
//* <pre>
/*
- Хорошо подходит для отображения стихотворений или демонстрации примеров кода.
- Для вывода кода нужно дополнительно обернуть содержимое тега pre в тег code, чтобы подчеркнуть, что внутри именно код, а не схематичный котик или стихотворение.
*/

//# Иллюстрация
//* <figure>
/*
- Этот тег хорош для любого иллюстративного или демонстрационного материала, которым можно дополнить содержание документа. Таким материалом могут быть схемы, графики, примеры кода, таблицы и так далее.
*/

//# Пустой контейнер для стилизации
//* <div>
/*
- Это чистый пустой элемент, которые отлично подходят как контейнер для стилизации. Использовать рекомендуется, если более подходящих семантических тегов не нашлось.
- Если вы хотите просто объединить и стилизовать второстепенные элементы, которые не так важны для поисковика, лучше использовать div.
- Если вы можете использовать семантический элемент и подсказать браузеру, что именно там находится, лучше использовать подходящий элемент, а не div.
*/
