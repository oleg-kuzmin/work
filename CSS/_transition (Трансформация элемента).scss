//* Матрица трансформации
.transform-matrix {
  transform: matrix(2, 3, 4, 5, 6, 7);
  // 2 - изменение масштаба по горизонтали (элемент увеличен вдвое по оси X);
  // 3 - скос по вертикали (положительное значение поднимает левую половину элемента и опускает правую, отрицательное наоборот);
  // 4 - скос по горизонтали (положительное значение наклоняет элемент влево, отрицательное вправо);
  // 5 - изменение масштаба по вертикали (элемент растянут в 5 раз по оси Y);
  // 6 - сдвиг по оси X в пикселях;
  // 7 - сдвиг по оси Y в пикселях.
}

//* Специальные обозначения трансформации
.transform-translate {
  transform: translate(10px, 20px); // (сдвиг по оси X, сдвиг по оси Y)
  // сдвинет объект на 10 пикселей вправо и на 20 пикселей вниз
  // сдвиги translate заданы в пикселях, но возможно определять их и в относительных величинах
}

.transform-scale {
  transform: scale(1.5, 0.5); // (масштаб по оси X, масштаб по оси Y) | (масштаб по всем осям)
  // увеличит объект в полтора раза по горизонтали и уменьшит наполовину по вертикали
  // масштабирование scale определяется относительно 1
  // значение 1 означает «один к одному», то есть элемент не изменится
  // числа больше единицы увеличивают объект, а меньше единицы — уменьшают
}

.transform-rotate {
  transform: rotate(30deg); // (поворот по часовой)
  // повернёт объект на 30 градусов по часовой стрелке
}

.transform-skew {
  transform: skew(30deg, 40deg); // (скос по оси X, скос по оси Y)
  // наклонит объект на 30 градусов влево и скосит левую сторону на 40 градусов вверх, а правую на 40 градусов вниз
}

//* Эффекты перехода
.transition {
  transition: background-color 1s linear 2s; // (property | duration | timing-function | delay (можно не указывать))
  transition-property: background-color; // cообщает, какие именно свойства должны меняться плавно
  transition-duration: 1s; // время перехода в секундах;
  transition-timing-function: ease; // непринуждённо
  transition-timing-function: linear; // линейно
  transition-timing-function: ease-in; // осторожно
  transition-timing-function: ease-out; // отпустить
  transition-timing-function: ease-in-out; // сначала осторожно, потом отпустить
  transition-timing-function: cubic-bezier(1, 0.2, 0.52, 0.46); //
  // Если нужно что-то особенное, переходное поведение можно определить кривой Безье — инструментами, подобными http://cubic-bezier.com
  transition-delay: 2s; // задержка в секундах между изменением состояния элемента и запуском анимации
}
