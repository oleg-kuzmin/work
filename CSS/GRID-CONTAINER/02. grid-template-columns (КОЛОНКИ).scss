//# Значения

//* grid-template-columns: repeat(auto-fill, 100px)
// Свойство auto-fill создаёт пустые колонки, чтобы заполнить всё доступное пространство.

//# Значения с именами грид-линий
//* grid-template-columns: [start] 250px [line2] 400px [line3] 600px [end]
// Кроме непосредственного количества колонок и их размеров можно задавать и имена для грид-линий, ограничивающих эти колонки.

//* grid-template-columns: [start] 140px [line2 col2-start] 250px [col2-end end]
// Каждая линия может иметь больше одного имени. Это чем-то похоже на классы в HTML — вы можете задать элементу больше одного класса. Тут аналогичная ситуация. Например, такой код будет совершенно валиден, у второй и третьей грид-линий колонки по два имени.

//# Значения auto-fill или auto-fit
// В тех случаях, когда количество колонок или строк не известно для свойств grid-template-columns и grid-template-rows можно установить значения auto-fill или auto-fit. Оба эти параметра автоматически добавляют в грид-сетку строки и клонки, но ведут себя немного по-разному.

//* grid-template-columns: repeat(auto-fill, 100px)
// Стремится заполнить колонками всё доступное пространство, а когда элементы заканчиваются, создаёт пустые колонки, равномерно распределяя доступную область между существующими и «виртуальными» колонками.

//* grid-template-columns: repeat(auto-fit, 100px)
// Действует похожим образом, но, схлопывает пустые колонки и отдаёт больше места под заполненные. Пустые колонки всё ещё существуют, просто с нулевым размером.

//# Другие значения
// max-content - «Будь такой ширины, чтобы вмещать содержимое без переносов и максимально компактно, без свободного пространства по краям».

// min-content - «Ориентируйся на самый маленький — картинку или слово.

// fit-content - Трек с fit-content ориентируется на контент, но всегда стремится к указанному в нём значению. Колонка занимает ширину под размер своего контента. Но она не сможет превзойти значение, указанное в fit-content.

//* grid-template-columns: repeat(auto-fit, minmax(100px, 1fr))
// Резиновая сетка.

//* grid-template-columns: repeat(5, auto)
// Колонки с автоматическим размером. При значении auto размер грид-полос подстраивается под размер грид-элементов так, чтобы уместился самый большой из них, другие элементы поделят между собой оставшееся пространство.

//* grid-template-columns: repeat(5, minmax(100px, 1fr))
// Колонки с функцией minmax. Функция minmax имеет два параметра: минимальный размер min и максимальный max. Можно задавать в пикселях, процентах, фракциях. Трек или элемент с таким размером растягивается и сжимается в пределах этих значений.

//* grid-template-columns: repeat(5, minmax(min-content, max-content))
// Будет ориентироваться на контент: не ужмётся меньше содержимого, но и не займёт лишнее место, когда контента мало.

//* grid-template-columns: repeat(5, max-content)
// Будь такой ширины, чтобы вмещать содержимое без переносов и максимально компактно, без свободного пространства по краям. Это удобно для подписей к картинкам. Значение max-content размещает подпись на одной строке без переносов.

//* grid-template-columns: repeat(5, min-content)
// Стремится перенести всё, что переносится, чтобы содержимое ячейки занимало как можно меньше места. Значение min-content сообщает треку: «Ориентируйся на самый маленький — картинку или слово.

//* grid-template-columns: repeat(5, fit-content(200px))
// Предельный размер ширины колонки. Колонка занимает ширину под размер своего контента.
