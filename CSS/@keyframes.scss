//# @keyframes
/*
- Директива @keyframes используется для создания ключевых кадров CSS-анимаций.
- Что из себя представляет любая анимация? Это переход от одного состояния элемента к другому состоянию.
- После ключевого слова @keyframes мы должны написать имя анимации. Оно понадобится нам, чтобы связать анимацию для конкретного элемента с ключевыми кадрами. Задавайте уникальное имя каждой анимации.
- Если в коде встречается несколько директив с одинаковыми именами, то будет воспроизводиться последняя, стоящая ниже по коду анимация.
- Ключевые кадры могут прописываться при помощи ключевых слов from (начальный кадр) и to (конечный кадр). Это удобно, если у вас всего два ключевых кадра. Если же кадров больше двух, то можно использовать проценты.
- Браузер расшифровывает ключевое слово from как 0%, а ключевое слово to как 100%.
- Если нужна простая анимация от исходного значения к конечному, то внутри директивы можно указать только финальный кадр.
*/

@keyframes circle-to-square {
  from {
    border-radius: 50%;
    background-color: red;
  }
  to {
    border-radius: 0;
    background-color: blue;
  }
}

//# Примеры
//* Простая анимация
@keyframes circle-to-square {
  to {
    border-radius: 0;
    background-color: blue;
  }
}

//* Два кадра
@keyframes circle-to-square {
  from {
    border-radius: 50%;
    background-color: red;
  }
  to {
    border-radius: 0;
    background-color: blue;
  }
}

//*




//# ПРИМЕР
//* keyframes простой из 2-х кадров (Браузер расшифровывает ключевое слово from как 0%, а ключевое слово to как 100%.)
@keyframes circle-to-square {
  from {
    border-radius: 50%;
    background-color: red;
  }
  to {
    border-radius: 0;
    background-color: blue;
  }
}

//* keyframes из 3 кадров
@keyframes move {
  from {
    left: 0;
    top: 0;
  }
  50% {
    left: 60px;
    top: 0;
  }
  to {
    left: 120px;
    top: 0;
  }
}

//* простая анимация от исходного значения к конечному
@keyframes circle-to-square {
  to {
    border-radius: 0;
    background-color: blue;
  }
}
