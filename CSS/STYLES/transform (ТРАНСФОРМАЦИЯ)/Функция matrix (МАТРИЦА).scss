//# Функция matrix (МАТРИЦА)
// Выше мы упомянули несколько функций трансформации. Каждая выполняет какое-то одно небольшое действие. matrix() — это функция, которой можно описать любую трансформацию в плоскости экрана. Она использует матричные преобразования и может заменить собой все вышеописанные функции. Но при этом она очень сложно читается. Например, глядя на функцию matrix(0.707107, 0.707107, -0.707107, 0.707107, -0.707107, 34.6482) невозможно сразу точно определить, что она аналогична записи rotate(45deg) translate(24px, 25px). Зачем же она нужна, такая сложная, если проще описать трансформации соответствующими функциями? Ну например, с её помощью можно писать сложные динамические анимации. Популярные JS-библиотеки для анимации «под капотом» используют как раз матричные преобразования, а не конкретные функции трансформации.

.element {
  transform: matrix(1, 2, 3, 4, 5, 6);
}

//# Значения
//* transform: matrix(a, b, c, d, tx, ty)
/*
a - изменение масштаба по горизонтали (элемент увеличен вдвое по оси X)
b - скос по вертикали (положительное значение поднимает левую половину элемента и опускает правую, отрицательное наоборот)
c - скос по горизонтали (положительное значение наклоняет элемент влево, отрицательное вправо)
d - изменение масштаба по вертикали (элемент растянут в 5 раз по оси Y)
tx - сдвиг по оси X в пикселях
ty - сдвиг по оси Y в пикселях
*/

//* transform: matrix3d(a1, b1, c1, d1, a2, b2, c2, d2, a3, b3, c3, d3, a4, b4, c4, d4)
// Если нам нужно произвести трансформации в трёхмерном пространстве, а не в плоскости экрана, то нужно использовать эту функцию. Она ещё более сложна в понимании, и вряд ли кто-то вообще пишет её руками.
