//# начальное значение initial
// Каждое свойство CSS имеет начальное значение.
// Это начальное значение не связано с типом HTML-элементак которому оно применяется
//* Ключевое слово initial указывает браузеру использовать значение по умолчанию данного свойства CSS
.selector {
  line-height: initial; // = normal, т.к. initial-value: normal
  display: initial; // = inline, т.к. initial-value: inline
  color: initial; // = black, т.к. initial-value: black
}

//# user agent stylesheet
// После применения начальных стилей всех свойств CSS браузер загружает их стили.
// Эти стили не имеют ничего общего с базовыми начальными значениями свойств CSS
// Например:
h1 {
  display: block;
  font-weight: bold;
}

//# inherit
// 1. Указывает браузеру искать значение ближайшего родительского элемента
// 2. Если у ближайшего родителя тоже значение inherit, браузер продолжит искать по дереву DOM
// 3. Если значения нет, браузер будет использовать user agent stylesheet
// 4. Если нет никакого стиля пользовательского агента, он будет использовать базовый стиль initial.

//# unset работает по-разному для различных типов свойств (наследуемых и ненаследуемых)
// Наследуемые - все свойства, которые влияют на текст (font-size - inherited: yes)
// Ненаследуемые - все свойства, которые не относятся к тексту (border - inherited: no)
//* Для наследуемых свойств unset будет работать как inherit
h2 {
  color: unset; // = color: inherit
  font-size: unset; // = font-size: inherit
}

//* Для ненаследуемых свойств unset будет работать как initial
.selector {
  display: unset; // = display: initial;
}

//* Зачем тогда unset.
// В настоящее время у нас есть новое свойство под названием all
// которое дает новую возможность: сбросить все наследуемые свойства и ненаследуемые свойства одновременно
body {
  all: unset; // cброс всех наследуемых свойств на inherit, а всех ненаследуемых свойств на initial.
}

body {
  all: revert; // cброс всех стилей на базовые стили браузера ()
}










