//# visibility (Видимость)
// Свойство visibility прячет элемент от глаз пользователя. Практически так же, как это делает opacity. И в том, и в другом случае элемент не виден, но механизм работы этих свойств разный.
// Если при помощи opacity можно гибко изменять прозрачность элемента и делать его, например, видимым на 33%, то свойство visibility имеет только два состояния: видимый и невидимый.

//# значения
.element {
  visibility: visible; // элемент видим (по умолчанию)
  visibility: hidden;  // элемент не виден на странице, но занимает отведённое ему место, влияет на поток документа.
}

//# общая информация
/*
- Обратите внимание, что скрытый элемент всё равно влияет на поток документа и занимает отведённое ему место.
- Важный момент: при значении hidden элемент становится невидимым для программ чтения с экрана (скринридеров), а также на него нельзя будет попасть при навигации с помощью клавиатуры. Стоит помнить об этом при разработке, если вам важна доступность сайта.
- Ещё есть устаревшее значение collapse, которое нужно только при работе с таблицами. Современными браузерами оно не поддерживается и обрабатывается как hidden.
- Так же можно применять в качестве значения стандартные ключевые слова: inherit, initial и unset.
- Свойство нельзя анимировать при помощи transform.
- Спрятанный элемент скрывается из так называемого accessability tree — становится недоступен для скринридеров и не может получить фокус при перемещении с помощью клавиатуры.
- Важная особенность свойства, что оно, в отличие от display: none или opacity: 0, не просто прячет родителя, а наследуется на все дочерние элементы. Это значит, что это поведение можно переписать и вложенный элемент с visibility: visible будет видно. Это можно использовать для кастомизации разметки, сгенерированной сторонней библиотекой.
*/
