//# :has (ПРОВЕРКА ВЛОЖЕННОГО СЕЛЕКТОРА)
/*
- Функция-псевдокласс :has()позволяет уточнить основной селектор дополнительным. Это единственный способ выбрать элемент на основе дочернего или соседнего элемента посредством CSS.
- Функция-псевдокласс :has() принимает один или несколько селекторов любой сложности в качестве аргумента. В отличие от :is() и :where() правило применится только к тому селектору, который был описан до :has().
- Использование псевдокласса :has() влияет на специфичность целевого селектора, т. е. при расчёте веса целевого селектора учитывается селектор, переданный в аргументах.
- Псевдокласс :has() не может быть вложен в другой :has(), так как это может привести к циклическим запросам при выполнении поиска селектора.
- Нельзя использовать псевдоэлементы в качестве аргументов в :has(), а также в качестве целевого селектора.
*/

//# Синтаксис
selector1:has(selector2, selector3, selector4) {
  /*
  - selector1 — необязательный селектор (если не указан — правило применится ко всем подходящим элементам).
  - selector2-3-4 в :has() описывает селектор относительно своей точки отсчёта — selector1.
  */
}

selector:has(img) {
  // Один аргумент.
}

selector:has(.class, #top) {
  // Два аргумента. Если .class — валидный селектор, а #top — нет, то selector будет уточнён за счёт .class.
}

selector:has(.content, #link) {
  // Два аргумента. Переданные через запятую селекторы selector1:has(selector2, selector3) браузер проверяет аналогично: selector2 или selector3. Допустим, что в примере оба переданных в :has() селектора являются действительными. Тогда selector будет уточнён за счёт #link, так как вес #link больше веса .content.
}

selector1:has(selector2):has(selector3) {
  // Есть возможность соединять селекторы. Такую запись браузер интерпретирует аналогично: selector2 и selector3. В случае валидности селекторов selector2 и selector3, браузер применит стили к selector1.
}

//# Пример
//* Применяем стили ко всем ссылкам, которые содержат изображения
a:has(img) {
  // Стили
}

//* Стили применятся только к такому <dt>, за которым сразу следует элемент <dd>
dt:has(+ dd) {
  // Стили
}
