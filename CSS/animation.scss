//# animation (Анимация)

.element {
  //* мега-шорткат, в котором можно за раз указать значения для всех свойств
  animation: circle-to-square 2s infinite alternate-reverse ease-in 1s;
  /*
  - Значения указываются через пробел. Порядок указания значений не важен. Из-за того, что значения этих свойств очень разные, браузер сам догадывается, какое значение к какому свойству относится. Важно только помнить, что первое значение времени будет воспринято как значение animation-duration (длительность анимации), а второе — animation-delay (задержка воспроизведения).
  - Для работы анимации совсем не обязательно перечислять все значения. Достаточно указать имя анимации и её длительность. Для остальных свойств будут установлены значения по умолчанию.
  */

  //* несколько анимаций одному элементу через запятую
  animation: circle-to-square 10s infinite alternate ease-out 1s, color-change 5s alternate linear infinite;



  //* количество итераций
  animation-iteration-count: 2; // анимация используется 2 раза
  animation-iteration-count: infinite; // анимация будет повторяться бесконечно

  //* развитие анимации между ключевыми кадрами
  animation-timing-function: linear; // анимация проигрывается равномерно, без колебаний скорости (по умолчанию)
  animation-timing-function: ease; // анимация начинается медленно, затем быстро разгоняется и снова замедляется к концу
  animation-timing-function: ease-in; // анимация начинается медленно и плавно ускоряется к концу
  animation-timing-function: ease-out; // анимация начинается быстро и плавно замедляется к концу
  animation-timing-function: ease-in-out; // анимация начинается и заканчивается медленно, ускоряясь в середине
  animation-timing-function: cubic-bezier(
    1,
    0.2,
    0.52,
    0.46
  ); // тип ускорения в виде кривой Безье (http://cubic-bezier.com)
  animation-timing-function: step-start; // задаёт пошаговую анимацию, разбивая её на отрезки, изменения происходят в начале каждого шага
  animation-timing-function: step-end; // пошаговая анимация, изменения происходят в конце каждого шага
  animation-timing-function: steps(10, end);
  /*
  - функция, указывающая, что анимация должна воспроизводиться шагами, резко переходя от одного состояния к другому
  - Первый параметр указывает, на сколько отрезков нужно разбить анимацию. Значением должно быть целое положительное число больше 0.
  - Второй параметр является необязательным и указывает позицию шага, момент, когда начинается анимация. Возможные значения:
  1) jump-start — первый шаг происходит при значении 0.
  2) jump-end — последний шаг происходит при значении 1.
  3) jump-none — все шаги происходят в пределах от 0 до 1 включительно.
  4) jump-both — первый шаг происходит при значении 0, последний — при значении 1.
  5) start — ведёт себя как jump-start.
  6) end — ведёт себя как jump-end.
  - Со значением start анимация начинается в начале каждого шага, со значением end — в конце каждого шага с задержкой. Задержка вычисляется как результат деления времени анимации на количество шагов. Если второй параметр не указан, используется значение по умолчанию end.
  */

  //* свойство, позволяющее ставить анимацию на паузу и запускать снова
  animation-play-state: running; // анимация проигрывается (по умолчанию)
  animation-play-state: paused; // анимация ставится на паузу. При повторном запуске продолжается с того места, где была остановлена
}
