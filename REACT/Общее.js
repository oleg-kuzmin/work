/*
- Реакт выполняет ререндеринг компонента в двух случаях: когда меняется состояние или свойство компонента.
- Ререндеринг выполняется по отношению к родительскому компоненту и всем вложенным (дочерним) в него.
- Пользовательский компонент называется с заглавной буквы.
- Каждый компонент должен иметь родительский компонент.
- Свойства props передаются сверху вниз, от родителя к дочерним компонентам, не наоборот.
- Компонент не должен изменять (мутировать) собственные свойства (входящие props).
- Компонент может изменять собственное состояние.
- Компонент не может изменять состояние других компонентов, включая дочерние или родительские компоненты.
- Можно влиять на изменение состояния других компонентов, но непосредственное изменение происходит в родном для состояния компоненте.
- Хуки реакт появились для управления состоянием в функциональных компонентах, до 16.8 состоянием можно было управлять только в классовых компонентах.
- Если внутри функции (компонента) вызвать внешнюю функцию (например хук), то она может изменить значение переменной внутри, т.е. возвращает каждый раз разный результат, такие функции называются функции с побочным эффектом.

- Именование компонентов: PascalCase
- Именование известных переменных, которые не меняются в процессе жизненного цикла компонента (например адрес хоста): DB_HOST
- Именование всех остальных: camelCase
*/
