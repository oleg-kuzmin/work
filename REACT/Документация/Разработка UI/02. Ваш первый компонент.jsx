//# Ваш первый компонент
// Компоненты — это одна из основных концепций React. Они являются фундаментом, на котором вы строите пользовательские интерфейсы (UI), что делает их идеальным местом для начала вашего путешествия по React!

/* Вы узнаете
- Что такое компонент
- Какую роль играют компоненты в приложении React
- Как написать свой первый компонент React
*/

//# Компоненты: UI строительные блоки
// В Интернете HTML позволяет нам создавать богатые структурированные документы с помощью встроенного набора тегов, таких как <h1> и <li>:

<article>
  <h1>My First Component</h1>
  <ol>
    <li>Components: UI Building Blocks</li>
    <li>Defining a Component</li>
    <li>Using a Component</li>
  </ol>
</article>;

// Эта разметка представляет статью <article>, ее заголовок <h1> и (сокращенное) оглавление в виде упорядоченного списка <ol>. Подобная разметка в сочетании с CSS для стиля и JavaScript для интерактивности лежит в основе каждой боковой панели, аватара, модала, выпадающего окна — всех элементов пользовательского интерфейса, которые вы видите в Интернете.

// React позволяет объединять разметку, CSS и JavaScript в пользовательские "компоненты", повторно используемые элементы пользовательского интерфейса для вашего приложения. Код оглавления, который вы видели выше, можно превратить в компонент <TableOfContents />, который можно отображать на каждой странице. Под капотом он по-прежнему использует те же HTML-теги, такие как <article>, <h1> и т. д.

// Как и в случае с HTML-тегами, вы можете компоновать, упорядочивать и вкладывать компоненты для создания целых страниц. Например, страница документации, которую вы читаете, состоит из компонентов React:

<PageLayout>
  <NavigationHeader>
    <SearchBar />
    <Link to="/docs">Docs</Link>
  </NavigationHeader>
  <Sidebar />
  <PageContent>
    <TableOfContents />
    <DocumentationText />
  </PageContent>
</PageLayout>;

// По мере роста вашего проекта вы заметите, что многие из ваших конструкций могут быть составлены путем повторного использования уже написанных компонентов, что ускорит вашу разработку. Наше оглавление выше может быть добавлено на любой экран с помощью <TableOfContents />! Вы даже можете начать свой проект с тысяч компонентов, которыми поделилось сообщество разработчиков React, например, Chakra UI (https://chakra-ui.com/) и Material UI (https://material-ui.com/).

//# Определение компонента
// Традиционно при создании веб-страниц веб-разработчики размечали содержимое, а затем добавляли взаимодействие, добавляя немного JavaScript. Это отлично работало, когда взаимодействие было просто необходимостью в Интернете. Теперь от него ждут многие сайты и все приложения. React ставит интерактивность на первое место, используя при этом ту же технологию: компонент React — это функция JavaScript, которую вы можете посыпать разметкой. Вот как это выглядит:

//* App.js
function Profile() {
  return <img src="https://i.imgur.com/MK3eW3Am.jpg" alt="Katherine Johnson" />;
}

// А вот как создать компонент:

//* Шаг 1: Экспорт компонента
// Префикс export default — это стандартный синтаксис JavaScript (не специфичный для React). Он позволяет отметить главную функцию в файле, чтобы впоследствии ее можно было импортировать из других файлов. Подробнее об это в главе 03. Импорт и экспорт компонентов!

//* Шаг 2: Определить функцию
// С помощью function Profile() { } вы определяете функцию JavaScript с именем Profile.

//! Внимание
// Компоненты React являются обычными функциями JavaScript, но их имена должны начинаться с заглавной буквы, иначе они не будут работать!
//! Внимание

//* Шаг 3: Добавить разметку
// Компонент возвращает тег <img /> с атрибутами src и alt. <img /> написан как HTML, но на самом деле это JavaScript под капотом! Этот синтаксис называется JSX, и он позволяет встраивать разметку внутрь JavaScript.

// Выражения return могут быть написаны на одной строке. Но если ваша разметка не находится на одной строке с ключевым словом return, вы должны заключить его в пару круглых скобок:

function Profile() {
  return (
    <div>
      <img src="https://i.imgur.com/MK3eW3As.jpg" alt="Katherine Johnson" />
    </div>
  );
}

//! Внимание
// Без круглых скобок любой код в строках после return будет проигнорирован!
//! Внимание

//# Использование компонента

