//# Обновление массивов в состоянии
// В JavaScript массивы являются изменяемыми, но при хранении их в состоянии вы должны относиться к ним как к неизменяемым. Как и в случае с объектами, когда вы хотите обновить массив, хранящийся в состоянии, вам нужно создать новый массив (или сделать копию существующего), а затем установить состояние для использования нового массива.

/* Вы узнаете
- Как добавлять, удалять или изменять элементы в массиве в React state
- Как обновить объект внутри массива
- Как сделать копирование массива менее повторяющимся с помощью Immer
*/

//# Обновление массивов без мутации
// В JavaScript массивы - это просто еще один вид объектов. Как и с объектами, вы должны рассматривать массивы в React state как доступные только для чтения. Это означает, что вы не должны переназначать элементы внутри массива, например arr[0] = 'bird', а также не должны использовать методы, которые изменяют массив, такие как push() и pop().

// Вместо этого, каждый раз, когда вы хотите обновить массив, вы должны передавать новый массив в вашу функцию установки состояния. Для этого вы можете создать новый массив из исходного массива вашего состояния, вызвав его не изменяющие методы, такие как filter() и map(). Затем вы можете установить свое состояние на полученный новый массив.

/* Вот справочная таблица распространенных операций с массивами. При работе с массивами внутри React state вам нужно избегать методов в левой колонке, а предпочесть методы в правой колонке:

избегать (изменяет массив)                     предпочитать (возвращает новый массив)
добавление push, unshift                       concat, [...arr] синтаксис распространения
удаление pop, shift, splice                    filter, slice
замена splice, arr[i] = ... присваивание       map
сортировка reverse, sort                       сначала копируем массив
*/

// В качестве альтернативы можно использовать Immer, который позволяет использовать методы из обоих столбцов.

//! Внимание
/* К сожалению, slice и splice называются одинаково, но являются совершенно разными:
- slice позволяет копировать массив или его часть.
- splice изменяет массив (для вставки или удаления элементов).
*/
// В React вы будете использовать slice (без p!) гораздо чаще, потому что вы не хотите изменять объекты или массивы в состоянии. В Обновление объектов в состоянии объясняется, что такое мутация и почему она не рекомендуется для состояния.
//! Внимание


