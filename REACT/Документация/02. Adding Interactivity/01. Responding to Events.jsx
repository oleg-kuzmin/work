//# Реагирование на события
// React позволяет добавлять обработчики событий в ваш JSX. Обработчики событий — это ваши собственные функции, которые будут запускаться в ответ на такие взаимодействия, как щелчок, наведение курсора, фокусировка на вводе формы и т. д.

/* Ты выучишь:
- Различные способы написания обработчика событий
- Как передать логику обработки событий из родительского компонента
- Как распространяются события и как их остановить
*/

//# Добавление обработчиков событий
// Чтобы добавить обработчик событий, нужно сначала определить функцию, а затем передать ее как свойство соответствующему тегу JSX. Например, вот кнопка, которая пока ничего не делает:

//* App.js
function Button() {
  return <button>I don't do anything</button>;
}

/* Вы можете заставить ее показывать сообщение, когда пользователь нажимает кнопку, выполнив следующие три шага:
1. Объявите функцию handleClick внутри компонента Button.
2. Реализуйте логику внутри этой функции (используйте alert для показа сообщения).
3. Добавьте onClick={handleClick} в <button> JSX.
*/

//* App.js
function Button() {
  function handleClick() {
    alert('You clicked me!');
  }

  return <button onClick={handleClick}>Click me</button>;
}

/* Вы определили функцию handleClick, а затем передали ее в качестве props в <button>.
handleClick — это обработчик событий. У обработчика событий обычно следующие особенности:
- Обычно определяются внутри ваших компонентов.
- Нейминг функция начинается с handle, за которым следует имя события.
*/

// По соглашению обработчики событий обычно называют handle, за которыми следует имя события. Вы часто будете видеть onClick={handleClick}, onMouseEnter={handleMouseEnter} и так далее.

// Альтернативно вы можете создать функцию для обработчика событий прямо внутри onClick

<button
  onClick={function handleClick() {
    alert('You clicked me!');
  }}
/>;

// Или, более кратко, используя стрелочные функции:
<button
  onClick={() => {
    alert('You clicked me!');
  }}
></button>;

// Все эти стили эквивалентны. Функции для обработчика событий внутри onClick удобны для коротких записей.


