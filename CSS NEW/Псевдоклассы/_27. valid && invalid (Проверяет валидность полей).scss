//# :VALID && :INVALID (ПРОВЕРЯЕТ ВАЛИДНОСТЬ ПОЛЕЙ)
// Псевдоклассы используются для стилизации полей формы, филдсетов, либо самой формы:
// :invalid для заполнений с ошибкой;
// :valid для верных заполнений.

//# ПРИМЕР
input:invalid {
  border: 2px solid red;
}

input:invalid + .validity-icon::before {
  content: "✖";
  color: red;
}

input:valid + .validity-icon::before {
  content: "✓";
  color: green;
}

[type="checkbox"]:invalid {
  outline: 2px solid red;
  outline-offset: 2px;
}

//# ОБЩАЯ ИНФОРМАЦИЯ
/* Поле ввода имени и чекбокс обязательны к заполнению, но не заполнены, поэтому псевдокласс :invalid применяется к ним сразу же.
- Поле ввода электронной почты необязательно к заполнению, поэтому к нему сразу же применён псевдокласс :valid.
- Но если ввести в поле хотя бы один символ, браузер запускает проверку на корректность ввода email (из-за того, что мы указали type="email") и применяет псевдокласс :invalid до тех пор, пока не будет введён корректный адрес электронной почты.
- Также указанные псевдоклассы применяются и к самой форме, в которой находится инпут.
- Если в форме есть группа связанных радиокнопок (<input type="radio">), то если хотя бы у одной есть атрибут required, псевдокласс :invalid будет применён ко всем радиокнопкам сразу.
- Псевдоклассы :invalid или :valid применяются и к самой форме, и к тегу <fieldset>, в зависимости от того, есть ли внутри ошибки, или все инпуты заполнены верно.
- В отличие от комплексной валидации формы, которая происходит при попытке её отправить, эти псевдоклассы работают в реальном времени и сохраняют свою актуальность даже во время ввода.
- В настоящий момент стили для псевдокласса :invalid применяются к невалидному полю сразу же, что не всегда удобно.
- В будущих версиях спецификации CSS должен появиться псевдокласс :user-invalid, который задуман как раз для целей, описанных выше. То есть он будет применяться, например, к полю ввода только после того, как пользователь начал там что-то писать.*/
