//#  OVERFLOW (ПОВЕДЕНИЕ БЛОКА ПРИ ПЕРЕПОЛНЕНИИ)
// Свойство overflow позволяет буквально определить, что делать с содержимым блочного (то есть для элемента, у которого display определяется как block, inline-block, flex или grid) элемента, если оно не влезает в размеры — отобразить или обрезать (с полосами прокрутки или без).

//# ПРИМЕР
.element {
  overflow: visible; // содержимое отображается снаружи родительского блока, если его размеры больше родительского блока (по умолчанию)
  overflow: hidden; // содержимое, выходящее за пределы «родительского» блока, обрезается по его границам без прокрутки
  overflow: scroll; // контент обрезается по границам «родительского» блока, но внутри этой области содержимое доступно с помощью прокрутки;
  overflow: auto; // если содержимое переполняет блок, контент будет доступен для прокрутки
  overflow: clip; // новое значение (поддерживается всеми основными браузерами, кроме Safari), похожее по результату на hidden, но границы родительского блока рассчитываются с учётом внутренних отступов
  //* отдельно для горизонтали и вертикали
  overflow-x: visible;
  overflow-y: visible;
}

//# ОБЩАЯ ИНФОРМАЦИЯ
/* Синтаксис свойства позволяет задать два значения — для оси x и оси y (аналогичного результата можно добиться, используя самостоятельные CSS-свойства overflow-x и overflow-y). Если указано одно значение, оно равнозначно применяется для обеих осей.
- Чтобы контент внутри блока можно было скроллить, его содержимое должно явно превышать высоту родительского блока. Этого можно добиться или явно задав ему height, или ограничив высоту родительского блока.
- Задавая родительскому блоку фиксированную высоту, учитывайте, что, если не указан box-sizing: border-box, то это значение не учитывает внутренние отступы, заданные с помощью padding, что может спровоцировать появление нежелательной прокрутки.
- При вёрстке «классических» макетов необходимости в управлении полосой прокрутки практически нет. Чтобы избежать появления нежелательных полос прокрутки, минимизируйте явное задание высоты (кроме случаев, где это действительно необходимо).
- Ещё один пример, когда будет полезно знание свойства overflow — обрезание текста с многоточием (в сочетании со свойством text-overflow: ellipsis или недокументированного -webkit-line-clamp).*/