//# function rotate
// Кроме сдвига или наклона, элемент можно вращать.

.element {
  transform: rotate(360deg);
}

//# Значения
// В функцию передаём единицы измерения углов (deg, rad, turn), например 45deg или 0.5turn. Обратите внимание, что обычное вращение элемента на странице — это вращение относительно оси Z. Если мы хотим вращать элемент относительно других осей, то нужно не забывать про перспективу. С ней повороты относительно X или Y будут выглядеть максимально естественно.

//* transform: rotate(360deg)
// Функция аналогична rotateZ(Z). Чтобы не запоминать ось для типового вращения элемента, мы можем использовать просто слово rotate.

//* transform: rotateZ(360deg)
// Вращение по оси Z.

//* transform: perspective(500px) rotateX(30deg)
// Вращение по оси X. ДОбавить perspective на первое место.

//* transform: perspective(500px) rotateY(30deg)
// Вращение по оси Y. ДОбавить perspective на первое место.

//* transform: perspective(500px) rotate3d(30deg)
// Если нужно повернуть элемент по всем трём осям, можно всё собрать в кучку и использовать эту функцию.

//* rotate: 180deg
// В последних версиях спецификации появились отдельные CSS-свойства для трансформаций. Это rotate, translate и scale. Если раньше мы писали комплексные трансформации, применяя несколько функций, то теперь каждую трансформацию можем описать отдельным свойством. Оба этих способа записи выполнят одни и те же трансформации, но у них есть ряд принципиальных отличий. Самое главное — используя индивидуальные свойства, мы можем создавать классы-модификаторы без опасения перекрыть всё свойство transform.
